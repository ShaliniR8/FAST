= stylesheet_link_tag "https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css"
= javascript_include_tag "https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"

css:
  #map-canvas {
    border:2px solid;
    width:70%;
    height:500px;
    margin-left: 0px;
    box-shadow: 5px 5px 5px #888888;
    margin-top: 15px;
    margin-bottom: 25px;
    display: inline-block;
  }

- if session[:mode] == "ASAP" && CONFIG::GENERAL[:has_gmap]
  .col-xs-12
    .panel.panel-thin.panel-danger
      .panel-heading
        .panel-title
          .top_text
            | Heatmap
      .panel-body.text-center
        #map-canvas
        .center
          input id="toggle-pins" type="checkbox"

javascript:
  $( document ).ready(function() {
    let view_pins = false;
    let infowindow = new google.maps.InfoWindow();

    $('#toggle-pins').bootstrapToggle({
      on: "View Pins",
      off: "Hide Pins",
      width: '150px',
      onstyle: "warning",
      offstyle: "success"
    });

    $('#toggle-pins').change(function() {
      if (view_pins) {
        initMap();
      } else {
        createMarker(map);
      }
      view_pins = !view_pins;
    })

    let map, heatMapData;

    function updatePoints() {
      JSON.parse('#{raw(@coords.to_json)}').forEach( (element) => {
        coord = new google.maps.LatLng(element.lat, element.lng),
        heatMapData.push(coord)
      })
    }

    function createMarker(map) {
      JSON.parse('#{raw(@coords.to_json)}').forEach( (element) => {
        const myLatLng = { lat: element.lat, lng: element.lng };

        content = `
        <div class="text-left">
          <b>Report #:</b> ${element.id}<br>
          <b>Template:</b> ${element.template}<br>
          <b>Title:</b> ${element.title}<br>
          <b>Event Date:</b> ${element.event_date}<br>
          <a href="/records/${element.id}" target="_blank">View Report</a>
        </div>
        `

        marker = new google.maps.Marker({
          position: myLatLng,
          map,
          content: content,
        });

        google.maps.event.addListener(marker, 'click', function() {
          infowindow.setContent(this.content);
          infowindow.open(this.getMap(),this);
        });

      })
    }


    function initMap() {
      var mapOptions = {
        zoom: parseInt("#{@zoom}"),
        minZoom: parseInt("#{@zoom}"),
        center: new google.maps.LatLng(
          "#{@lat}",
          "#{@lng}"
        ),
        mapTypeId: google.maps.MapTypeId.SATELLITE,
        keyboardShortcuts: false,
        scrollwheel: false,
        zoomControl: true,
        streetViewControl: false
      };

      map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);

      heatMapData = new google.maps.MVCArray([]);

      heatmap = new google.maps.visualization.HeatmapLayer({
        data: heatMapData,
        map: map
      });

      updatePoints();
      // createMarker(map);
    }

    initMap();
  });
