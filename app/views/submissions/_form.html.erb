<script type="text/javascript" src="/javascripts/utility/nested_fields.js"></script>
<script type="text/javascript" src="/javascripts/utility/collapse-panel2.js"></script>
<script type="text/javascript" src="/javascripts/utility/validate-form.js"></script>
<script type="text/javascript" src="/javascripts/utility/delete.js"></script>
<script type="text/javascript" src="/javascripts/utility/bootstrap-datepicker.js"></script>
<script type="text/javascript" src="/javascripts/utility/format-builder.js"></script>
<script type="text/javascript" src="/javascripts/utility/timezone-control.js"></script>
<script type="text/javascript" src="/javascripts/utility/extra_fields.js"></script>
<script type="text/javascript" src="/javascripts/utility/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="/javascripts/utility/dataTables.bootstrap.min.js"></script>
<script type="text/javascript" src="/javascripts/utility/dataTables.buttons.min.js"></script>
<!-- <script type="text/javascript" src="/javascripts/utility/employee_select.js"></script> -->
<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
<script src="https://cdn.datatables.net/fixedcolumns/3.3.2/js/dataTables.fixedColumns.min.js"></script>
<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
<link rel="stylesheet" type="text/css" href="/stylesheets/bootstrap/dataTables.bootstrap.min.css"/>

<!-- This calculate  "#total_duty_time" based on "#duty_on_time" and "#duty_off_time". Fields need to have exact HTML ID -->
<script type="text/javascript" src="/javascripts/templates/total_duty_time_calculation.js"></script>

<%if CONFIG::GENERAL[:has_gmap].present?%>
  <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&key=AIzaSyDRNvISiW_CO6FTNCdV40Nh19rAncpeLJo"></script>
  <%=render 'shared/load_gmap'%>
  <div hidden id="map-container">
    <div id="map-canvas" style="height:500px;"></div>
  </div>
<%end%>

<%if @template.js_link.present?%>
  <script type="text/javascript" src="/javascripts/templates/<%=@template.js_link%>"></script>
<%end%>

<div class="item active mt50" style="height:auto;">
  <div class="grid per90 center-block">
    <%= render "shared/alerts" %>
    <div class="panel panel-warning">
      <div class="panel-heading">
        <div class="panel-title">
          <div class="top_text">
            <%=@action.titleize + " " + @record.template.name%> Submission <%=@action != "new" ? (@record.confidential? ? "(Confidential)" : '') : ''%>
          </div>
          <div class="top_buttons pull-right">
            <h5 id="auto-save" class="pull-right ml10" style="visibility:hidden">Auto Save Enabled</h5>
            <a class="btn btn-default expandall mb5"
              data-toggle="tooltip"
              data-placement="top"
              title="Expand all panels">Expand All</a>
            <%if (@action == 'Continue' && current_user.has_access("submissions", "destroy")) || current_user.id == @record.user_id%>
              <%=link_to "Discard",
                  discard_submission_path(@record),
                  :id=>"delete-btn",
                  :class=>"ml10 mr5 btn btn-danger pull-right",
                  "data-toggle" => "tooltip",
                  "data-placement" => "top",
                  "title" => "This will delete the submission permanently"%>
            <%end%>
            <%if CONFIG::GENERAL[:sabre_integration].present?%>
              <a class="btn btn-success ml10 mb5 mr5 refresh_sabre" style="display:none">Refresh Sabre</a>
            <%end%>
          </div>
        </div>
      </div>

      <div id = "map-canvas-hidden" style="display:none;"></div>
      <div class="modal fade bs-example-modal-lg emp_modal"
        tabindex="-1"
        role="dialog"
        aria-labelledby="myLargeModalLabel">
        <div class="modal-dialog modal-lg" role="document">
          <div class="modal-content">
            <%=render 'emp'%>
          </div>
        </div>
      </div>

      <div class="modal fade bs-example-modal-lg airport_modal"
        tabindex="-1"
        role="dialog"
        aria-labelledby="myLargeModalLabel">
        <div class="modal-dialog modal-lg" role="document">
          <div class="modal-content">
            <%=render 'airports_select'%>
          </div>
        </div>
      </div>


      <div class="panel-body" id="form_body">
        <%=form_for @record , :html => {:multipart => true, :novalidate => true} do |f|%>

          <%=hidden_field_tag 'is_autosave', 1%>
          <%=hidden_field_tag 'present_id', ""%>

          <%if @template.allow_anonymous%>
            <div class="col-xs-12">
              <div class="col-xs-1">
                <%=select_tag :anonymous,
                  options_for_select({"Yes" => 1, "No" => 0}, @record.anonymous || 0),
                  {:class => "form-control"}%>
              </div>
              <div class="col-xs-10 mt5">
                <%=label_tag :anonymous,
                  "Do you want to submit anonymously?"%>
              </div>
            </div>
          <%end%>

          <%if CONFIG::GENERAL[:has_confidential_forms].present?%>
            <div class="col-xs-12 mt5">
              <div class="col-xs-1">
                <%=select_tag :confidential,
                  options_for_select({"Yes" => 1, "No" => 0}, @record.confidential || 0),
                  {:class => "form-control"}%>
              </div>
              <div class="col-xs-10 mt5">
                <%=label_tag :confidential,
                  "Do you want this submission to be confidential?"%>
              </div>
            </div>
          <%end%>

          <%if @template.map_template.present? && CONFIG.sr::GENERAL[:enable_dual_report]%>
            <div class="col-xs-12" style="margin-top:10px; margin-bottom:10px">
              <div class="col-xs-1">
                <%=select_tag :create_copy,
                  options_for_select({"Yes" => 1, "No" => 0}),
                  {:class => "form-control required_field", :include_blank => true}%>
              </div>
              <div class="col-xs-10 mt5">
                <b style="color:red">
                  Do you want to submit a <%=@template.map_template.name%> report at the same time?
                </b>
              </div>
            </div>
          <%end%>

          <%=f.hidden_field :templates_id, :value => @template.id%>
          <%=f.hidden_field :completed%>
          <%if @action == "new"%>
            <%=f.hidden_field :user_id, :value => current_user.id%>
          <%end%>

          <div class="col-xs-12 mt10">

            <div class="col-xs-12 col-sm-2 mb5">
              <%=label_tag :submitted_by, "Submitted By"%>
              <input type="text"
                readonly
                class="form-control"
                value='<%=@action == "new" ? current_user.full_name : @record.created_by.full_name%>'>
            </div>

            <%if CONFIG.sr::GENERAL[:submission_description]%>
              <%if CONFIG.sr::GENERAL[:submission_description_required]%>
                <div class="col-xs-12 col-sm-4 mb5">
                  <%=label_tag :description,
                    "Event Title",
                    :style => "color:red" %>
                  <%=f.text_field :description,
                    {:class => "form-control required_field",
                    :maxlength => "30",
                    :placeholder => "please limit to 30 characters"}%>
                  <h6 id="countchar" class="pull-right">0/30</h6>
                </div>
              <% else %>
                <div class="col-xs-12 col-sm-4 mb5">
                  <%=label_tag :description,
                    "Event Title"%>
                  <%=f.text_field :description,
                    {:class => "form-control",
                    :maxlength => "30",
                    :placeholder => "please limit to 30 characters"}%>
                  <h6 id="countchar" class="pull-right">0/30</h6>
                </div>
              <% end %>
            <%end%>

            <div class="col-xs-12 col-sm-4 mb5">
              <%date_value = @record.event_date.present? ? @record.event_date.in_time_zone(@record.event_time_zone) : nil%>
              <%if !CONFIG.sr::GENERAL[:submission_time_zone]%>
                <%date_value = @record.event_date%>
              <%end%>
              <%=label_tag :event_date, "Date and Time of Event", :style => "color:red"%>
              <%=f.text_field :event_date,
                {:class => 'field-datetime form-control required_field', :id => "event_date", 'data-format' => CONFIG.getTimeFormat[:datetimepicker],
                  value: date_value}%>
            </div>

            <div class="col-xs-12 col-sm-2 mb5">
              <%event_time_zone = @record.event_time_zone%>
              <%=label_tag :event_time_zone, "Time Zone", :style => "color:red"%>
              <%if CONFIG.sr::GENERAL[:submission_time_zone]%>
                <%event_time_zone = 'UTC' if event_time_zone.blank?%>
                <div class="input-group">
                  <%=f.select :event_time_zone,
                     ActiveSupport::TimeZone.all.map(&:name),
                    {:selected => event_time_zone},
                    {:class => 'form-control tz atz toplevel_timezone required_field'}%>
                  <span class="input-group-addon tc">All</span>
                </div>
              <%else%>
                <%event_time_zone = 'Local' if event_time_zone.blank?%>
                <%=f.hidden_field :event_time_zone, :value => event_time_zone%>
                <button
                  id="time-zone-toggle-btn"
                  type="button"
                  class="input-group btn btn-primary"
                  data-toggle="button"
                  aria-pressed="false"
                  autocomplete="off">
                  <%=event_time_zone%>
                </button>
              <%end%>
            </div>
          </div>

          <div class="col-xs-12 mt20">
            <%@record.categories.where(deleted: false).order(:category_order).each do |c| %>
              <% @cat = c %>
              <%if @cat.id == 338%>
                <%=render "observation_phases_fields", :f => f%>
              <%else%>
                <%=render "category_fields", :f => f%>
              <%end%>
            <%end%>
            <%@cat = nil%>
            <%=render '/forms/attachments_form', :f => f, :owner => @record%>
          </div>

          <div class="mt10 mr10">
            <%= f.submit "Submit",
              :class => "btn btn-success pull-right mr10 submit_btn",
              :disable_with => "Submitting...",
              :confirm => "Are you sure?",
              "data-toggle" => "tooltip",
              "data-placement" => "top",
              "title" => "This will file the Submission and notify the Analysts"%>
            <%= f.submit "Save for Later",
              :class => "btn btn-info pull-right mr5 submit_btn",
              :disable_with => "Saving...",
              "data-toggle" => "tooltip",
              "data-placement" => "top",
              "title" => "This will save the Submission to In Progress"%>

            <%if @action == "new"%>
              <%if !params[:home]%>
                <%=link_to "Cancel",
                  new_submission_path,
                  :id=>"cancel-btn",
                  :class=>"mr5 btn btn-default pull-right",
                  "data-toggle" => "tooltip",
                  "data-placement" => "top",
                  "title" => "This cancels the Submission, you will lose all the unsaved changes"%>
              <%else%>
                <%=link_to "Cancel", root_url,
                  :id=>"cancel-btn",
                  :class=>"mr5 btn btn-default pull-right",
                  "data-toggle" => "tooltip",
                  "data-placement" => "top",
                  "title" => "This cancels the Submission, you will lose all the unsaved changes"%>
              <%end%>
            <%elsif @action == "Continue"%>
              <%=link_to "Cancel", incomplete_submissions_path,
                :id=>"cancel-btn",
                :class=>"mr5 btn btn-default pull-right",
                "data-toggle" => "tooltip",
                "data-placement" => "top",
                "title" => "This cancels the Submission, you will lose all the unsaved changes"%>
            <%else%>
              <%=link_to "Cancel", submission_path(@record),
                :id=>"cancel-btn",
                :class=>"mr5 btn btn-default pull-right",
                :confirm=>'Are you sure?',
                "data-toggle" => "tooltip",
                "data-placement" => "top",
                "title" => "This cancels the Submission, you will lose all the unsaved changes"%>
            <%end%>
          </div>

        <%end%>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">

  var airport_table;
  var map,
      mapTypes = {},
      pointsHolder = {},
      mapSettings = {},
      markers = [],
      centerLat = "<%=CONFIG::GENERAL[:lat]%>",
      centerLng = "<%=CONFIG::GENERAL[:lng]%>",
      mapZoom = "<%=CONFIG::GENERAL[:gMapZoom]%>",
      clicked_map_field_id;

  function update_timezones() {
     $('.toplevel_timezone').on('change',function(){
      var timezone = $('.toplevel_timezone').val();
      $(".timezone_field").val(timezone);
    });
  }

  // Updata airport table
  function handleSearch(event) {
    // Get field id
    var field_id = event.data.field_id
    // Get the keywords user searched for
    var icao = $("#icao").val();
    var iata = $("#iata").val();
    var arpt_name = $("#arpt_name").val();
    // Do nothing if nothing is searched
    if(icao == "" && iata == "" && arpt_name ==""){
    // Update the table if icao code is not empty
    }else{
      // Get the data from server
      $.get('<%=airport_data_submissions_path%>?field_id=' + field_id + '&icao=' + icao + "&iata=" + iata + "&arpt_name=" + arpt_name, function(data){
        // Render airport table with data
        $("#airports_table").html(data);
        updateAirportTable(field_id);
      });
    }
  }

  function updateAirportTable(field_id) {
    // Initialize table as a datatable
    airport_table = $('#airports' + field_id).DataTable({
      "aLengthMenu": [[5, 10, 15, -1], [5, 10, 15, "All"]],
      "iDisplayLength": 5
    });
    // User clicked on a row
    $("body").on("click", "#airports" + field_id + " tbody tr", function(){
      // Get the row information
      var icao = $(this).find("td").eq(0).text();
      var iata = $(this).find("td").eq(1).text();
      // Set the value on the form
      if (<%=CONFIG::GENERAL[:sabre_integration]%> == true) {
        $("#airport" + field_id).val(iata);
        $("#airport-select" + field_id).val(iata);
      } else {
        $("#airport" + field_id).val(icao + ";" + iata);
        $("#airport-select" + field_id).val(icao + ";" + iata);
      }
      resetModal(field_id);
    });
  }

  $(document).ready(function() {
    autoSaveText = document.getElementById('auto-save');

    runAutosave = setInterval(autosave, 60000);
    setInterval(function() {
      autoSaveText.style.visibility = (autoSaveText.style.visibility == 'hidden' ? '' : 'hidden');
    }, 1000);

    $(window).on('beforeunload', function() {
      clearInterval(runAutosave);
      return true;
    });

    timeZoneToggleBtn = document.querySelector('#time-zone-toggle-btn')
    if (timeZoneToggleBtn != null) {
      $('#time-zone-toggle-btn').on('click', function() {
        if (timeZoneToggleBtn.innerHTML == 'Local') {
          timeZoneToggleBtn.innerHTML = 'UTC'
          $('#submission_event_time_zone').val('UTC')
        } else {
          timeZoneToggleBtn.innerHTML = 'Local'
          $('#submission_event_time_zone').val('Local')
        }
      })
    }

    // Count the characters limit
    $('#submission_description, textarea').keyup(function() {
      len = $(this).val().length;
      max = $(this).attr('maxlength');
      $(this).siblings('h6').text(len + '/' + max);
    });

    update_timezones();

    // Get listing of all the airport buttons
    var field_id;
    $(this).find(".airport_button").each(function(index, item){
      // Get the button that's being clicked
      $(item).on("click", function(){
        // Get the selected airport's field id
        field_id = $(this).prop("id");
        resetModal(field_id);
        $("#search_btn").html('<button class="btn btn-info" id="search_btn_' + field_id + '">Search</button>');
        $("#search_btn_"+field_id).on("click", {field_id: field_id}, handleSearch);
      });
    });

    $('.required_field').each(function() {
      if ($(this).parents('.nested_field').css('display') != 'none'){
        update_titles($(this));
      }
    });

    var count;
    var isValidationReq = true;

    $('.submit_btn').click(function() {
      $(window).off('beforeunload');
      $("#is_autosave").val(1);
      if ($(this).val() == 'Save for Later') {
        isValidationReq = false;
      } else {
        isValidationReq = true;
      }
    });

    $(this).find(".map_button").each(function(index, item) {
      $(item).on('click', function(){
        clicked_map_field_id = $(this).prop("id");
        swal ({
          title: "Add or Remove Map Marker for Map field",
          allowOutsideClick: false,
          showCancelButton: false,
          html: '<p id="loading">Loading...</p>',
          onOpen: function() {
            $('#map-canvas').appendTo('.swal2-content');
            updateMarkers(clicked_map_field_id);
            $('.swal2-content #loading').remove();
          },
          onClose: function() {
            $('#map-canvas').appendTo('#map-container');
            let cnt = count_visible_markers_for_field(clicked_map_field_id);
            if (cnt > 0) {
              if (cnt > 1) {
                str = cnt + " points marked"
              } else {
                str = "1 point marked"
              }

              $("#map" + clicked_map_field_id).val(str);
              $("#map-select" + clicked_map_field_id).val(str);
            } else {
              $("#map" + clicked_map_field_id).val("");
              $("#map-select" + clicked_map_field_id).val("");
            }
          }
        }).catch(swal.noop);
      });
    });

    $("form").on('submit', function() {
      if(isValidationReq) {
        $("div.category-panel").find('.panel-body').slideUp();
        $("div.category-panel").closest('div.category-panel').addClass('collapsed');
        $("div.category-panel").closest('div.category-panel').find('i').removeClass('glyphicon-chevron-up').addClass('glyphicon-chevron-down');
        $(this).find('.required_field').each(function() {
          var cboxes = $(this).find('.checkbox_mul').get();
          var radios = $(this).find('.radio_req').get();

          if (radios == null || radios.length == 0) {
            if (cboxes == null || cboxes.length == 0) {
              if ($(this).val() == "") {
                prop_up_errors(this);
              }
            } else {
              var lim = $(this).attr('name');
              count = 0;
              $(this).find('.checkbox_mul').each(function() {
                if ($(this).prop('checked')) {
                  count ++;
                }
              });
              if (count < lim) {
                prop_up_errors(this);
              }
            }
          } else {
            count = 0;
            $(this).find('.radio_req').each(function() {
                if ($(this).prop('checked')) {
                  count ++;
                }
            });
            if (count < 1) {
              prop_up_errors(this);
            }
          }
        });
      }
    });

    sabre_fields = []
    if (<%=CONFIG::GENERAL[:sabre_integration]%> == true) {
      $(".form-control").each(function() {
        if ($(this).attr("sabre-map") != null && $(this).attr("sabre-map") != "") {
          sabre_fields.push($(this));
        }
      });

      if (sabre_fields.length > 0 && "<%=@action%>" != "Continue") {
        $(".refresh_sabre").show();
        open_flights_table();
        $(".refresh_sabre").on('click', function(){
          open_flights_table();
        });
      } else {
        $(".refresh_sabre").hide();
      }
    }

    employee_table = null;
    clear_user_table();
    build_user_table();
    $(this).find(".emp_button").each(function(index, item){
      $(item).on("click", function(){
        $(window).resize();
        var field_id = $(this).prop('id');
        $(".emp_modal").show();
        clear_user_table();
        $("tbody tr").unbind();
        $(".close").unbind();
        $("tbody tr").on("click", function(){
          if (<%=CONFIG::GENERAL[:sabre_integration]%> == true) {
            $(item).parent().parent().find("#emp"+field_id).val($(this).find("td").eq(3).text());
          } else {
            $(item).parent().parent().find("#emp"+field_id).val($(this).find("td").eq(1).text());
          }

          $(item).parent().parent().find("#employee-select"+field_id).val($(this).find("td").eq(0).text());
          $('#emp_div').hide();
          $('.emp_modal').modal('toggle');
        });
        $('.close').on('click',function(){
          $(item).parent().parent().find("#emp"+field_id).val("");
          $(item).parent().parent().find("#employee-select"+field_id).val("");
          $('#emp_div').hide();
        });
        build_user_table();
      });
    });

  });

  function build_user_table(){
    employee_table=$('#users').DataTable({
      "aLengthMenu": [[5, 10, 15, -1], [5, 10, 15, "All"]],
      "iDisplayLength": 5
    });
  }

  function clear_user_table(){
    if(employee_table != null) {
      employee_table.destroy();
    }
  }

  function open_flights_table() {
    swal({
      allowOutsideClick: false,
      showCancelButton: false,
      showConfirmButton: false,
      html: "<%=escape_javascript render :partial => 'sabre_flights_table', :layout => false, :locals => {:flights => @flights}%>",
      onOpen: function() {
        let flights_table = $('#flights_table').DataTable({
            "iDisplayLength": 7,
        });

        $("tr").on('click', function() {
          id = $(this).attr('id');
          swal.close();
          $.ajax({
            type: "GET",
            url: "<%=flight_selected_submissions_path%>" + "?flight_record_id="+id,
            dataType: 'json',
            success: function(data) {
              for (let i = 0; i < sabre_fields.length; i++){
                value = fill_sabre_data(data, $(sabre_fields[i]).attr("sabre-map"));
                $(sabre_fields[i]).val(value);
              }
            }
          });
        });

        $('.close_swal_btn').on('click', function(){
          swal.close();
        });
      }
    });
  }

  function fill_sabre_data(data, attr) {
    switch (attr) {
      case "flight_date":
        return data['flight_date'];
      case "flight_number":
        return data['flight_number'];
      case "tail_number":
        return data['tail_number'];
      case "departure_airport":
        return data['departure_airport'];
      case "arrival_airport":
        return data['arrival_airport'];
      case "landing_airport":
        return data['landing_airport'];
      case "ca":
        return process_employee_positions("CA", data['all_employee_data']);
      case "fo":
        return process_employee_positions("FO", data['all_employee_data']);
      case "fa_1":
        return process_employee_positions("FA", data['all_employee_data']);
      case "fa_2":
        return process_employee_positions("Flight Attendant 2", data['all_employee_data']);
      default:
        return "";
    }
  }

  function process_employee_positions(attr, emp_data) {
    if (attr == "Flight Attendant 2") {
      let count = 0;
      for (let i = 0; i < emp_data.length; i++) {
        if (emp_data[i]['title'] == "FA") {
          if (count >= 1) {
            return emp_data[i]['number'];
          } else {
            count ++;
          }
        }
      }
      return "";
    } else {
      for (let i = 0; i < emp_data.length; i++) {
        if (emp_data[i]['title'] == attr) {
          return emp_data[i]['number'];
        }
      }
    }
    return "";
  }

  function prop_up_errors(target) {
    $(target).css('border-color', 'red');
    $(target).closest('div.category-panel').removeClass('collapsed');
    $(target).closest('div.category-panel').find('i').removeClass('glyphicon-chevron-down').addClass('glyphicon-chevron-up');
    $(target).closest('div.category-panel').find('.panel-body').slideDown();
  }


  function update_titles(target) {
    $(target).closest('div.category-panel').find('.panel-title').css("color", "red");
    $(target).closest('div.category-panel').find('.panel-title').value = "*" ;
  }


  function resetModal(field_id) {
    // Reset the table, field, and close the modal
    $("#airports_table").html("");
    $("#icao").val("");
    $("#iata").val("");
    $("#arpt_name").val("");
    $('#airport_div').hide();
    $(".airport_modal").modal("hide");
  }

  function autosave() {
    $("#is_autosave").val(2);
    $.ajax({
      type: "POST",
      url: $('form').attr('action'),
      data: new FormData($('form')[0]),
      enctype: 'multipart/form-data',
      processData: false,
      contentType: false,
      dataType: 'json',
      success: function(data) {
        if(data.record_id) {
          $('#present_id').val(data.record_id);
        }
      }
    });
  }

  function updateMarkers(id) {
    if(map == null) {
      markers = [];
      mapTypes = {};
      pointsHolder = {};
      read_form_points(id);
      initialize();
    }
  }

  function read_form_points(id) {
    action = "<%=@action%>";
    $('.pin-container').each(function(){
      if ($(this).closest("#pin-holder").attr("name") == id) {
        if($(this).hasClass("unsaved")) {
          if ($(this).find(".pin-lat").val()){
            var mark = {id:$(this).attr("data-id"), map_type:$(this).find(".pin-map-type").val(), lat:$(this).find(".pin-lat").val(), lng:$(this).find(".pin-lng").val()};
            markers.push(mark);
          }
        } else {
          if (action != "new") {
            if($(this).find(".pin-destroy").val() == "false"){
              if ($(this).find(".pin-lat").val()){
                var mark = {id:$(this).attr("data-id"), map_type:$(this).find(".pin-map-type").val(), lat:$(this).find(".pin-lat").val(), lng:$(this).find(".pin-lng").val()};
                markers.push(mark);
              }
            }
          }
        }
      }
    });
  }

  function count_visible_markers_for_field(id) {
    action = "<%=@action%>";
    count = 0;
    $('.pin-container').each(function(){
      if ($(this).closest("#pin-holder").attr("name") == id) {
        if($(this).hasClass("unsaved")) {
          if ($(this).find(".pin-lat").val()){
            count ++;
          }
        } else {
          if (action != "new") {
            if($(this).find(".pin-destroy").val() == "false"){
              if ($(this).find(".pin-lat").val()){
                count ++;
              }
            }
          }
        }
      }
    });
    return count;
  }

  function remove_placeholder_point_html() {
    $('.pin-container.unsaved').each(function(){
      if($(this).find(".pin-lat").val() == ""){
        $(this).remove();
      }
    });
  }

  function initialize() {
    mapSettings[google.maps.MapTypeId.SATELLITE] = {
      center: new google.maps.LatLng(parseFloat(centerLat), parseFloat(centerLng)),
      zoom: mapZoom
    };

    var mapOptions = {
      zoom: mapZoom,
      center: new google.maps.LatLng(centerLat, centerLng),
      mapTypeId: google.maps.MapTypeId.SATELLITE,
      keyboardShortcuts: false,
      scrollwheel: false,
      disableDoubleClickZoom: false,
      zoomControl: true,
      streetViewControl: false,
      disableDefaultUI: false,
      minZoom: mapZoom
    };

    map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
    map.setTilt(0);

    google.maps.event.addListener(map, 'click', function(event){
      var id = moment().valueOf(); // get new id

      var marker = new google.maps.Marker({
        id: id,
        position: event.latLng,
        map: map,
        mapType: map.getMapTypeId(),
      });

      pointsHolder[id] = marker;

      var newPinContainer = $('#pin-template[name="'+clicked_map_field_id+'"]').html().replace(/\[points\_attributes\]\[\d+\]/g, '[points_attributes]['+id+']')
      $('#pin-holder[name="'+clicked_map_field_id+'"]').append(newPinContainer);
      $('#pin-holder[name="'+clicked_map_field_id+'"] .pin-container:last').attr('data-id', id);
      $('#pin-holder[name="'+clicked_map_field_id+'"] .pin-container:last .pin-lat').val(event.latLng.lat());
      $('#pin-holder[name="'+clicked_map_field_id+'"] .pin-container:last .pin-lng').val(event.latLng.lng());
      $('#pin-holder[name="'+clicked_map_field_id+'"] .pin-container:last .pin-map-type').val(map.getMapTypeId());

      marker.addListener('click', function(){
        delMarker(this.id);
      })
    });

    // Draw existing pins
    if (markers.length > 0) {
      for(var i = 0, len = markers.length; i < len; i++){
        if (i == 0) {
          map.setMapTypeId(markers[i].map_type);
        }

        console.log("Existing Marker ID: " + markers[i].id);

        var marker = new google.maps.Marker({
          id: markers[i].id,
          position: new google.maps.LatLng(markers[i].lat, markers[i].lng),
          map: map,
          mapType: markers[i].map_type,
          visible: markers[i].map_type === map.getMapTypeId(),
        });

        pointsHolder[markers[i].id] = marker;

        marker.addListener('click', function(){
          delMarker(this.id);
        });
      }
    }
  }

  function setMapType(mapType) {
    map.setZoom(mapSettings[mapType].zoom);
    map.setCenter(mapSettings[mapType].center);

    for (var id in pointsHolder) {
      pointsHolder[id].setVisible(pointsHolder[id].mapType === mapType);
    }
  }

  function delMarker(id) {
    console.log("Deleting Marker ID: " + id);
    var pinContainer = $('#pin-holder[name="'+clicked_map_field_id+'"] .pin-container[data-id="'+id+'"]');

    var pinDestroy = $('.pin-destroy', pinContainer)
    if (pinContainer.hasClass("unsaved"))
      pinContainer.remove();
    else
      pinDestroy.val(1);

    marker = pointsHolder[id];
    marker.setMap(null);
    delete pointsHolder[id];
  }

  function update_cb_rb_nested(field, isRadio) {
    console.log('update_cb_rb_nested');
    var field_id = $(field).attr("data-id");
    var field_value = $(field).attr("data-option");
    if (isRadio){
      $(".nested_field_" + field_id).closest('.nested_field_area').hide();
    }
    if ($(field).prop('checked')) {
      $(".nested_field_" + field_id + "_" + field_value).closest('.nested_field_area').show();
    } else {
      $(".nested_field_" + field_id + "_" + field_value).closest('.nested_field_area').hide();
    }
  }


  function update_nested_fields(field) {
    console.log('update_nested_fields');
    var field_id = $(field).attr("data-id");
    var field_value = $(field).find('option:selected').attr("data-option");
    $(".nested_field_" + field_id).closest('.nested_field_area').hide();
    $(".nested_field_" + field_id + "_" + field_value).closest('.nested_field_area').show();
  }
</script>


<style type="text/css">
  .tc {
    cursor: pointer;
  }
  .checkbox,
  .radio{
    cursor: pointer;
    margin-top: 2px;
    margin-bottom: 2px;
  }
  .checkbox:hover {
    font-weight:bold;
  }
  .radio:hover {
    font-weight:bold;
  }
  #map-canvas {
   width: 100%;
  }
</style>
