= javascript_include_tag \
  'utility/jquery.dataTables.min',
  'utility/dataTables.bootstrap.min',
  'utility/dataTables.buttons.min',
  'utility/nested_fields',
  'utility/checklist-control',
  'utility/dirty-form'

.modal.fade.emp_modal
  tabindex="-1"
  role="dialog"
  aria-labelledby="myLargeModalLabel"
  .modal-dialog.modal-lg
    role="document"
    .modal-content
      =render '/submissions/emp'

.modal.fade.airport_modal
  tabindex="-1"
  role="dialog"
  aria-labelledby="myLargeModalLabel"
  .modal-dialog.modal-lg
    role="document"
    .modal-content
      =render '/submissions/airports_select'

= form_for @record, html: {id: 'submit-form', class: 'dirty-submit', multipart: true} do |f|

  .item.active.mt50
    .grid.per90.center-block
      .col-xs-12
        .panel.panel-warning
          .panel-heading
            .panel-title
              = "#{action_name.titleize} Checklist"
              h5.pull-right#auto-save style="visibility: hidden;" = "Auto Save enabled"

          .panel-body style="height: calc(85vh - 210px);overflow-y:auto"
            .col-xs-12
              - if @record.table_view
                table class='table table-bordered table-striped mt10' id="table-view-#{@record.id}"
                  thead
                    tr
                      - @record.checklist_header.checklist_header_items.each do |item|
                        th width="#{item.size}%" = item.title
                      th Attachments
                  tbody.checklist_rows#checklist_rows
                    - @record.checklist_rows.each do |checklist_row|
                      = f.fields_for :checklist_rows, checklist_row do |row_form|
                        = render 'checklist_row_fields', checklist_row: checklist_row, f: row_form, source: 'Existing'
              - else # Page View
                table class='table table-bordered table-striped mt10' id="page-view-update-#{@record.id}"
                  thead
                    th = "Page View"
                  tbody
                    - @record.checklist_rows.each do |checklist_row|
                      - is_header = (defined? checklist_row) && checklist_row.is_header || false
                      = f.fields_for :checklist_rows, checklist_row do |row_form|
                        tr
                          td
                            table class='table table-bordered table-striped mt10'
                              thead
                                = row_form.hidden_field :id, class: 'row-id changed'
                                th = "Header"
                                th = "Content"
                              tbody.checklist_rows
                                - checklist_row.checklist_cells.each do |checklist_cell|
                                  tr
                                    = row_form.fields_for :checklist_cells, checklist_cell do |cell_form|
                                      - header_item = checklist_cell.checklist_header_item
                                      td
                                        b = header_item.title
                                      = render 'checklist_row_fields_td',
                                        :source => 'Existing',
                                        :header_item => header_item,
                                        :checklist_cell => checklist_cell,
                                        :f => cell_form
                                - if action_name != 'edit'
                                  td
                                    b Attachments
                                  td
                                    - unless is_header
                                      = render 'forms/attachments_show_mini', owner: checklist_row, edit: true, f: row_form

          = f.submit 'Save', class: 'btn btn-success pull-right mt20 mb20', disable_with: 'Saving...'

css:
  .bootstrap-tagsinput {
    padding: 6px 12px;
  }
  .changed {
    box-shadow: 0px 0px 7px orange;
  }

script src="/plugins/forms/bootstrap-tagsinput/bootstrap-tagsinput.js"
script src="/js/libs/typeahead.bundle.js"

javascript:
  $(function(){


    // employ selector
    var employee_table;

    function build_user_table(){
      employee_table = $('#users').DataTable({
        "aLengthMenu": [[5, 10, 15, -1], [5, 10, 15, "All"]],
        "iDisplayLength": 5
      });
    }

    function clear_user_table(){
      employee_table.destroy();
    }

    $(window).resize();
    build_user_table();

    $(this).find(".emp_button").each(function(index, item){
      $(item).on("click", function(){
        var field_id = $(this).prop('id');
        $(".emp_modal").show();
        clear_user_table();
        $("#users tbody tr").unbind();
        // $(".close").unbind();
        $("#users tbody tr").on("click", function(){
          $(item).parent().parent().find("#emp" + field_id).val($(this).find("td").eq(1).text());
          $(item).parent().parent().find("#employee-select"+field_id).val($(this).find("td").eq(0).text());
          $('#emp_div').hide();
          $('.emp_modal').modal('toggle');
        });
        $('.close').on('click',function(){
          $(item).parent().parent().find("#emp"+field_id).val("");
          $(item).parent().parent().find("#employee-select"+field_id).val("");
          $('#emp_div').hide();
        });
        build_user_table();
      });
    });


    // airport selector
    var airport_table;

    function handleSearch(event) {
      // Get field id
      var field_id = event.data.field_id
      // Get the keywords user searched for
      var icao = $("#icao").val();
      var iata = $("#iata").val();
      var arpt_name = $("#arpt_name").val();

      // Do nothing if nothing is searched
      if(icao == "" && iata == "" && arpt_name ==""){
      // Update the table if icao code is not empty
      }else{
        // Get the data from server
        $.get("#{airport_data_submissions_path}?field_id=" + field_id + '&icao=' + icao + "&iata=" + iata + "&arpt_name=" + arpt_name, function(data){
          // Render airport table with data
          $("#airports_table").html(data);
          updateAirportTable(field_id);
        });
      }
    }

    function resetModal(field_id) {
      // Reset the table, field, and close the modal
      $("#airports_table").html("");
      $("#icao").val("");
      $("#iata").val("");
      $("#arpt_name").val("");
      $('#airport_div').hide();
      $(".airport_modal").modal("hide");
    }

    function updateAirportTable(field_id) {
      // Initialize table as a datatable
      airport_table = $('#airports' + field_id).DataTable({
        "aLengthMenu": [[5, 10, 15, -1], [5, 10, 15, "All"]],
        "iDisplayLength": 5
      });
      // User clicked on a row
      $("body").on("click", "#airports" + field_id + " tbody tr", function(){
        console.log('clicked!')
        // Get the row information
        var icao = $(this).find("td").eq(0).text();
        var iata = $(this).find("td").eq(1).text();
        // Set the value on the form
        $("#airport" + field_id).val(icao + ";" + iata);
        $("#airport-select" + field_id).val(icao + ";" + iata);
        resetModal(field_id);
      });
    }

      // Get listing of all the airport buttons
    var field_id;
    $(this).find(".airport_button").each(function(index, item){
      // Get the button that's being clicked
      $(item).on("click", function(){
        // Get the selected airport's field id
        field_id = $(this).prop("id");
        console.log(field_id)
        resetModal(field_id);
        $("#search_btn").html('<button class="btn btn-info" id="search_btn_' + field_id + '">Search</button>');
        $("#search_btn_"+field_id).on("click", {field_id: field_id}, handleSearch);
      });
    });


    //

    autoSaveText = document.getElementById('auto-save');

    $("#table-view-#{@record.id}").DataTable({
      "paging":   false,
      /* Disable initial sort */
      "order": [],
      autoWidth: false,
    })

    /* Disable sort buttons (table headers) */
    $("#table-view-#{@record.id}").find("th").off("click")

    var table = $("#page-view-update-#{@record.id}").DataTable({
      "aaSorting": [],
      "aLengthMenu": [[1, -1], [1, "All"]],
      "iDisplayLength": -1,
    })

    function autosave() {
      $.ajax({
        type: "POST",
        url: $('form').attr('action'),
        data: $('form').serialize(),
        dataType: "script"
      });
    }

    runAutosave = setInterval(autosave, 60000);
    setInterval(function() {
      autoSaveText.style.visibility = (autoSaveText.style.visibility == 'hidden' ? '' : 'hidden');
    }, 1000);

    $(window).on('beforeunload', function(){
      clearInterval(runAutosave)
      return true;
    });

    $(document).on("submit", "form", function(event){
        // disable unload warning
        $(window).off('beforeunload');
    });

  })
