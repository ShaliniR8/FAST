= stylesheet_link_tag "/plugins/tables/datatables-1.10.16/datatables.min.css"
= javascript_include_tag "/plugins/tables/datatables-1.10.16/datatables.min.js"
= javascript_include_tag "//cdn.datatables.net/plug-ins/1.10.16/sorting/natural.js"
= javascript_include_tag "/javascripts/utility/format-builder.js"


.col-xs-12
  = render "shared/alerts"
  = render "access_controls/new_modal"

  .panel.panel-primary
    .panel-heading
      .panel-title
        .top_text style="font-weight:bold;"
          = @title
        .top_buttons.pull-right
          - if defined?(btns)
            - btns.each do |btn|
              - if btn[:modal]
                = link_to btn[:btn_name], '#',
                  class: "btn #{btn[:btn_class]} pull-right mr5",
                  id: "#{btn[:class_id]}",
                  "data-toggle" => "modal",
                  "data-toggle" => "modal"
              - else
                = link_to btn[:btn_name],
                  btn[:btn_path],
                  class: "btn #{btn[:btn_class]} pull-right mr5",
                  onclick: btn[:onclick]

    .panel-body
      .fade.in.active id='table'
        = render 'shared/loaders', loader_text: 'Loading'
        .records-table.table-responsive
          table id='records_table' class='table table-hover table-striped table-bordered index_table'
            thead
              tr
                - @column_titles.each do |column_title|
                  th = column_title
            tfoot
              tr
                - @column_titles.each do |column_title|
                  th = column_title


css:
  .records-table {
    display: none;
  }

  th, td { font-size: 13px; }
  td > a { font-size: 13px !important; }


javascript:
  function updateSearchTerms(searchTerms) {
    for (column in searchTerms) {
      $(`tfoot tr th:nth-child(${parseInt(column)+1}) input`).val(searchTerms[column])
    }
  }

  function addIndividualColumnSearchField() {
    $('#records_table tfoot th').each(function(index) {

      isDateField = "#{@date_type_column_indices}".includes(index)
      if (isDateField) {
        $(this).html('<input type="date" class="form-control" />');
      } else {
        $(this).html('<input type="text" class="form-control" />');
      }
    });
  }

  function hideSourceColumnSearchField() {
    $('#records_table tfoot tr th').each(function(index){
      if ("#{@source_column_indices}".includes(index)){
        $(this).children().hide();
      }
    })
  }

  function hideActionColumnSearchField() {
    $('#records_table tfoot tr th:last-child').children().hide();
  }

  function alignExportBtns() {
    $('.dt-buttons.btn-group').addClass("pull-right mb15");
  }

  function loadMatrixColor() {
    // TODO: get colors from config file
    colors = ['red', 'orangered', 'yellow', 'green', 'limegreen', 'orange', 'lime', 'mediumseagreen', 'steelblue', 'crimson', 'coral', 'gold', 'skyblue', 'white', 'aqua']

    colors.forEach((color) => {
      $(`.table tbody tr td:has(span.${color})`).css('background-color',color);
    });
  }

  function columnSearch() {
    $('#records_table').dataTable().api().columns().every(function() {
      var column = this;

      $('input', this.footer()).on('keyup change', function(e) {
        // keyCode 13 is 'Enter'
        if(e.keyCode == 13 && column.search() !== this.value){
          search_term = this.value
          column.search(search_term).draw();
        }
      });
    });
  }

  function addRecordIdToRow() {
    $("tbody tr").each(function () {
      recordId = $(this).find(">:first-child").text();
      $(this).attr("record-id",recordId);
    })
  }

  function drawTableCallBack() {
    addIndividualColumnSearchField();
    hideActionColumnSearchField();
    hideSourceColumnSearchField()
    alignExportBtns();
    loadMatrixColor();
    $('#loader1').hide();
    $(".records-table").css({'opacity':1});
    $('.records-table').show();
    columnSearch();
    addRecordIdToRow();
  }

  $(function() {
    var recordsTable = $('#records_table').DataTable({
      dom: "<'row'<'col-xs-6'l><'col-sm-6'f>>" +
         "<'row'<'col-sm-12'tr>>" +
         "<'row'<'col-sm-5'i><'col-sm-7'p>>" +
         "<'row'<'col-sm-12'B>>",
      buttons: ['copy', 'csv', 'excel',
      {
        extend: 'print',
        exportOptions: {
          columns: 'th:not(:last-child)'
        }
      }],
      sDom: 'Blrtip', // hide search input field
      ajax: {
        url: "get_dataset",
        method: "POST",
        data: function (d) {
          d.ids = JSON.parse('#{raw @records_ids.to_json}')
          d.target = JSON.parse('#{raw @target.to_json}')
        },
        beforeSend: function(){
          $(".records-table").css({'opacity':0.5});
          $('#loader1').show();
        },
        error: function (jqXHR, textStatus, errorThrown) {
          if (textStatus == 'error' && errorThrown == 'Unauthorized') {
            location.reload(true);
          }
        },
        complete: function(data) {
          updateSearchTerms(data.responseJSON['searchTerms'])
        },
      },
      serverSide: true,
      columns: #{raw @columns.to_json},
      drawCallback: drawTableCallBack,
      order: [['0', 'desc']],
    });

    $(document).on('click', "#records_table tbody tr td", function(){
      var cellIdx = $(this)[0].cellIndex;
      var lastIdx = $(this).closest("tr").find("td:last")[0].cellIndex;
      if(cellIdx != lastIdx){
        window.location = ("/#{@table_name}/" + $(this).closest("tr").attr('record-id'));
      }
    });

  });
