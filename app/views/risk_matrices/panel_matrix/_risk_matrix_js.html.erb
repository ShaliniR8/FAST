<script type="text/javascript">

  $(document).ready(function() {

    var loader_partial = "<%=escape_javascript(render partial: 'shared/loader')%>";

    <%
      severity_option    = get_option_for_orientation(table_type: :severity_table)
      probability_option = get_option_for_orientation(table_type: :probability_table)
    %>

    initialize()
    load_data()

    $('form').on('submit', function() {
      status = <%=risk_type == 'Baseline'%> ? "baseline-status" : "mitigate-status"
      $(document).find('.temp_element').remove();
      submit_severity_result(status)
      submit_probability_result(status)
      commit = $(document).find('#commit');
      // use ajax on show page
      if(commit.val() == 'Update Risk Matrix'){
        console.log('submit risk form');
        var content_area = $(this).closest('.panel-body').find('.risk-matrix-content');
        $.ajax({
          url: $(this).attr('action'),
          data: $(this).serialize(),
          type: 'PUT',
          beforeSend: function() {
            $(content_area).css({'opacity': 0.5});
          },
          success: function(data) {
            $(content_area).css({'opacity': 1});
            $(content_area).html(data);
          },
          error: function(error) {
            console.log('error: ' + error);
          }
        });
        return false;
      }
      return true
    })


    $('.close').on('click', function() {
      uninitialize()
      reload_data()
    })


    <%if CONFIG::GENERAL[:drop_down_risk_selection]%>
      $('form').on('change', '#sev', function(e) {
        severity_value    = $('select#sev').children('option:selected').val()
        probability_value = $('select#like').children('option:selected').val()
        if ( severity_value != "" && probability_value != "") {
          update_risk_factor(severity_value, probability_value)
        } else {
          clear_risk_factor()
          if ("<%= risk_type %>" == "Baseline") {
            clear_baseline_risk()
          } else { // "Mitigate"
            clear_mitigate_risk()
          }
        }
      })
      $('form').on('change', '#like', function(e) {
        severity_value    = $('select#sev').children('option:selected').val()
        probability_value = $('select#like').children('option:selected').val()
        if ( probability_value != "" && severity_value != "" ) {
          update_risk_factor(severity_value, probability_value)
        } else {
          clear_risk_factor()
          if ("<%= risk_type %>" == "Baseline") {
            clear_baseline_risk()
          } else { // "Mitigate"
            clear_mitigate_risk()
          }
        }
      })
    <%end%>
  })

  function clear_risk_factor() {
    $("input#risk_fact").val('');
  }

  function update_risk_factor(severity_value, probability_value) {
    severity_value    = $('select#sev').children('option:selected').val()
    probability_value = $('select#like').children('option:selected').val()

    risk_table = <%=CONFIG::MATRIX_INFO[:risk_table].to_json.html_safe%>
    risk_definitions = <%=CONFIG::MATRIX_INFO[:risk_definitions].to_json.html_safe%>

    column_header = risk_table['column_header']
    row_header = risk_table['row_header']
    rows_color = risk_table['rows_color']

    row_index  = row_header.indexOf(severity_value)
    col_index = column_header.indexOf(probability_value)

    risk_color = rows_color[row_index][col_index]
    risk_fact = risk_definitions[risk_color]['rating']

    if ("<%= risk_type %>" == "Baseline") {
      clear_baseline_risk()
      set_baseline_risk(row_index, col_index)
    } else { // "Mitigate"
      clear_mitigate_risk()
      set_mitigate_risk(row_index, col_index)
    }
    $("input#risk_fact").val(risk_fact);
  }

  function submit_severity_result(status) {

    severity_result = new Array(<%= @severity_table[severity_option[:header]].size %>)

    $('.severity_td_<%=@owner.class.name%>_<%=@owner.id%>').each(function(){
      if ($(this).data(status) === "checked"){
        severity_result[$(this).data("<%= severity_option[:access_order][0] %>")] =
          $(this).data("<%= severity_option[:access_order][1] %>")
      }
    })

    // double check with the ruby variables
    for(i = 0; i < severity_result.length; i++){
      $('form').append("<input class='temp_element' name='<%=@target_name%>[<%=@severity_field%>][]' value=" + severity_result[i]+" hidden></input>")
    }
  }


  function submit_probability_result(status) {
    probability_result = new Array(<%= @probability_table[probability_option[:header]].size %>)

    $('.probability_td_<%=@owner.class.name%>_<%=@owner.id%>').each(function(){
      if ($(this).data(status) === "checked"){
        probability_result[$(this).data("<%= probability_option[:access_order][0] %>")] = $(this).data("<%= probability_option[:access_order][1] %>")
      }
    })

    for (i = 0; i < probability_result.length; i++){
      $('form').append("<input class='temp_element' name='<%=@target_name%>[<%=@probability_field%>][]' value=" +
        probability_result[i] + " hidden></input>");
    }
  }


  function initialize() {
    <% case risk_type %>
    <% when 'Baseline' %>
      matrix_cell_bg_color = '#AFEEFC'
      initialize_severity("baseline-status")
      initialize_probability("baseline-status")
    <% when 'Mitigate' %>
      matrix_cell_bg_color = '#FCAFCB'
      initialize_severity("mitigate-status")
      initialize_probability("mitigate-status")
    <% end %>
  }


  function uninitialize() {
    // Reset risk panel when modal is closed
    clear_baseline_risk()
    clear_severity("baseline-status")
    clear_probability("baseline-status")

    clear_mitigate_risk()
    clear_severity("mitigate-status")
    clear_probability("mitigate-status")

    // Detach listener for every table cell
    $('.severity_td_<%=@owner.class.name%>_<%=@owner.id%>').prop("onclick", null).off("click")
    $('.probability_td_<%=@owner.class.name%>_<%=@owner.id%>').prop("onclick", null).off("click")
  }


  function initialize_severity(status) {
    $('.severity_td_<%=@owner.class.name%>_<%=@owner.id%>').on('click',function(){
      if ($(this).data(status) === "checked"){
        $(this).data(status, "")
        $(this).css('background', 'none')
      }else{
        $(this).data(status, "checked")
        $(this).css('background', matrix_cell_bg_color)
        row_id = $(this).data("row")
        column_id = $(this).data("column")

        $('.severity_td_<%=@owner.class.name%>_<%=@owner.id%>').each(function(){

          <% if CONFIG::MATRIX_INFO[:severity_table][:orientation] == :horizontal %>
            if ($(this).data("row") == row_id && $(this).data("column") != column_id){
              $(this).data(status, "")
              $(this).css('background', 'none')
            }
          <% else %>
            if ($(this).data("row") != row_id && $(this).data("column") == column_id){
              $(this).data(status, "")
              $(this).css('background', 'none')
            }
          <% end %>

        })
      }

      <% if risk_type == 'Baseline' %>
        calculate_baseline_risk()
      <% else # 'Mitigate' %>
        calculate_mitigate_risk()
      <% end %>
    })
  }


  function initialize_probability(status) {
    $('.probability_td_<%=@owner.class.name%>_<%=@owner.id%>').on('click',function(){
      if ($(this).data(status) === "checked"){
        $(this).data(status, "")
        $(this).css('background', 'none')
      }else{
        $(this).data(status, "checked")
        $(this).css('background', matrix_cell_bg_color)
        row_id = $(this).data("row")
        column_id = $(this).data("column")
        $('.probability_td_<%=@owner.class.name%>_<%=@owner.id%>').each(function(){

          <% if CONFIG::MATRIX_INFO[:probability_table][:orientation] == :horizontal %>
            if ($(this).data("row") == row_id && $(this).data("column") != column_id){
              $(this).data(status, "")
              $(this).css('background', 'none')
            }
          <% else %>
            if ($(this).data("row") != row_id && $(this).data("column") == column_id){
              $(this).data(status, "")
              $(this).css('background', 'none')
            }
          <% end %>

        })
      }

      <% if risk_type == 'Baseline' %>
        calculate_baseline_risk()
      <% else # 'Mitigate' %>
        calculate_mitigate_risk()
      <% end %>
    })
  }


  function load_data() {
    <% case risk_type %>
    <% when 'Baseline' %>
      load_baseline()
      calculate_baseline_risk()
    <%when 'Mitigate'%>
      load_mitigate()
      calculate_mitigate_risk()
    <%else%>
      // show panel page
      // TODO: Edit or New page?
      load_baseline()
      load_mitigate()
      load_overlap()
      calculate_risk()
    <%end%>
  }


  function reload_data() {
    load_baseline()
    load_mitigate()
    calculate_risk()
  }


  function load_baseline() {
    <%if @owner.get_extra_severity.present? && @owner.get_extra_probability.present?%>

      $(".severity_td_<%=@owner.class.name%>_<%=@owner.id%>").each(load_severity)
      $('.probability_td_<%=@owner.class.name%>_<%=@owner.id%>').each(load_probability)

    <%end%>
  }


  function load_severity() {
    <%(0..CONFIG::MATRIX_INFO[:severity_table][severity_option[:header]].size - 1).each do |i|%>
      if ($(this).data("<%= severity_option[:access_order][0] %>") == <%=i%>){
        if($(this).data("<%= severity_option[:access_order][1] %>") == <%=@owner.get_extra_severity[i].nil? ? -1 : @owner.get_extra_severity[i] rescue -1%>){
          $(this).data("baseline-status","checked")
          $(this).css('background','#AFEEFC')
        }
      }
    <%end%>
  }


  function load_probability() {
    <%(0..CONFIG::MATRIX_INFO[:probability_table][probability_option[:header]].size - 1).each do |i|%>
      if ($(this).data("<%= probability_option[:access_order][0] %>") == <%=i%>){
        if($(this).data("<%= probability_option[:access_order][1] %>") == <%=@owner.get_extra_probability[i].nil? ? -1 : @owner.get_extra_probability[i] rescue -1%>){
          $(this).data("baseline-status", "checked")
          $(this).css('background', '#AFEEFC')
        }
      }
    <%end%>
  }


  function load_mitigate() {
    <%if @owner.get_mitigated_severity.present? && @owner.get_mitigated_probability.present?%>

      $(".severity_td_<%=@owner.class.name%>_<%=@owner.id%>").each(load_severity_after)
      $('.probability_td_<%=@owner.class.name%>_<%=@owner.id%>').each(load_probability_after)

    <%end%>
  }


  function load_overlap() {
    <%if @owner.get_mitigated_severity.present? && @owner.get_mitigated_probability.present?%>
    $(".severity_td_<%=@owner.class.name%>_<%=@owner.id%>").each(load_severity_overlap)
    $('.probability_td_<%=@owner.class.name%>_<%=@owner.id%>').each(load_probability_overlap)
  <%end%>
  }

  function load_severity_after() {
    <%(0..CONFIG::MATRIX_INFO[:severity_table][severity_option[:header]].size - 1).each do |i|%>
      if ($(this).data("<%= severity_option[:access_order][0] %>") == <%=i%>){
        if($(this).data("<%= severity_option[:access_order][1] %>") == <%=@owner.get_mitigated_severity[i].nil? ? -1 : @owner.get_mitigated_severity[i] rescue -1%>){
          $(this).data("mitigate-status","checked")
          $(this).css('background','#FCAFCB')
        }
      }
    <%end%>
  }

  function load_severity_overlap() {
    <%(0..CONFIG::MATRIX_INFO[:severity_table][severity_option[:header]].size - 1).each do |i|%>
      if ($(this).data("<%= severity_option[:access_order][0] %>") == <%=i%>){
        if($(this).data("<%= severity_option[:access_order][1] %>") == <%=@owner.get_mitigated_severity[i].nil? ? -1 : @owner.get_mitigated_severity[i] rescue -1%>){
          $(this).data("mitigate-status","checked")
          <%if @owner.get_extra_severity.present?%>
            if ($(this).data("<%= severity_option[:access_order][1] %>") == <%=@owner.get_extra_severity[i].nil? ? -1 : @owner.get_extra_severity[i] rescue -1%>){
              $(this).css('background','#CABCF6')
            }
          <%end%>
        }
      }
    <%end%>
  }

  function load_probability_after() {
    <%(0..CONFIG::MATRIX_INFO[:probability_table][probability_option[:header]].size - 1).each do |i|%>
      if ($(this).data("<%= probability_option[:access_order][0] %>") == <%=i%>){
        if($(this).data("<%= probability_option[:access_order][1] %>") == <%=@owner.get_mitigated_probability[i].nil? ? -1 : @owner.get_mitigated_probability[i] rescue -1%>){
          $(this).data("mitigate-status", "checked")
          $(this).css('background','#FCAFCB')
        }
      }
    <%end%>
  }


  function load_probability_overlap() {
    <%(0..CONFIG::MATRIX_INFO[:probability_table][probability_option[:header]].size - 1).each do |i|%>
      if ($(this).data("<%= probability_option[:access_order][0] %>") == <%=i%>){
        if($(this).data("<%= probability_option[:access_order][1] %>") == <%=@owner.get_mitigated_probability[i].nil? ? -1 : @owner.get_mitigated_probability[i] rescue -1%>){
          $(this).data("mitigate-status", "checked")
          <%if @owner.get_extra_probability.present?%>
            if ($(this).data("<%= probability_option[:access_order][1] %>") == <%=@owner.get_extra_probability[i].nil? ? -1 : @owner.get_extra_probability[i] rescue -1%>){
              $(this).css('background', '#CABCF6')
            }
          <%end%>
        }
      }
    <%end%>
  }


  function calculate_baseline_risk() {
    <% if CONFIG::GENERAL[:drop_down_risk_selection] %>

      <% if is_row_probability? %>
        <% if @owner.likelihood.present? && @owner.severity.present? %>
          row_index = <%=@owner.likelihood%>
          col_index = <%=@owner.severity%>
          set_baseline_risk(row_index, col_index)
        <% end %>
      <% else # row is severity %>
        <% if @owner.likelihood.present? && @owner.severity.present? %>
          row_index = <%=@owner.severity%>
          col_index = <%=@owner.likelihood%>
          set_baseline_risk(row_index, col_index)
        <% end %>
      <% end %>

    <% else # table_risk_selection %>
      severities = []
      probabilities = []
      severity_checked = 0
      probability_checked = 0

      $('.severity_td_<%=@owner.class.name%>_<%=@owner.id%>').each(function(){
        if ($(this).data("baseline-status") === "checked"){
          severities.push($(this).data("<%= severity_option[:access_order][1] %>"))
          severity_checked++
        }
      })

      $('.probability_td_<%=@owner.class.name%>_<%=@owner.id%>').each(function(){
        if ($(this).data("baseline-status") === "checked"){
          probabilities.push($(this).data("<%= probability_option[:access_order][1] %>"))
          probability_checked++
        }
      })

      <%if risk_type.present?%>
        clear_baseline_risk()
      <%end%>

      if (probability_checked > 0 && severity_checked > 0){
        mark_risk_on_matrix(probabilities, severities, "Baseline")
      }
    <% end %>
  }


  function calculate_mitigate_risk() {
    <% if CONFIG::GENERAL[:drop_down_risk_selection] %>

      <% if is_row_probability? %>
        <% if @owner.likelihood_after.present? && @owner.severity_after.present? %>
          row_index = <%=@owner.likelihood_after%>
          col_index = <%=@owner.severity_after%>
          set_mitigate_risk(row_index, col_index)
        <% end %>
      <% else # row is severity %>
        <% if @owner.likelihood_after.present? && @owner.severity_after.present? %>
          row_index = <%=@owner.severity_after%>
          col_index = <%=@owner.likelihood_after%>
          set_mitigate_risk(row_index, col_index)
        <% end %>
      <% end %>

    <% else # table_risk_selection %>
      severities = []
      probabilities = []
      severity_checked = 0
      probability_checked = 0

      $('.severity_td_<%=@owner.class.name%>_<%=@owner.id%>').each(function(){
        if ($(this).data("mitigate-status") === "checked"){
          severities.push($(this).data("<%= severity_option[:access_order][1] %>"))
          severity_checked++
        }
      })

      $('.probability_td_<%=@owner.class.name%>_<%=@owner.id%>').each(function(){
        if ($(this).data("mitigate-status") === "checked"){
          probabilities.push($(this).data("<%= probability_option[:access_order][1] %>"))
          probability_checked++
        }
      })

      <%if risk_type.present?%>
        clear_mitigate_risk()
      <%end%>

      if (probability_checked > 0 && severity_checked > 0){
        mark_risk_on_matrix(probabilities, severities, "Mitigate")
      }
    <% end %>
  }


  function calculate_risk() {
    calculate_baseline_risk()
    calculate_mitigate_risk()
  }


  function mark_risk_on_matrix(probabilities, severities, risk_type) {
    <% sev_direction  = CONFIG::MATRIX_INFO[:severity_table][:direction]    %>
    <% prob_direction = CONFIG::MATRIX_INFO[:probability_table][:direction] %>

    <% row_direction = is_row_probability? ? prob_direction : sev_direction  %>
    <% col_direction = is_row_probability? ? sev_direction  : prob_direction %>

    row_arr = <%=is_row_probability?%> ? probabilities : severities
    col_arr = <%=is_row_probability?%> ? severities    : probabilities

    // Quadrant I (North East)
    <% if ([:up, :left].include? row_direction) && ([:down, :right].include? col_direction) %>
      row_index = Math.min(...row_arr)
      col_index = Math.max(...col_arr)

    // Quadrant II (Nort West)
    <% elsif ([:up, :left].include? row_direction) && ([:up, :left].include? col_direction) %>
      row_index = Math.min(...row_arr)
      col_index = Math.min(...col_arr)

    // Quadrant III (South West)
    <% elsif ([:down, :right].include? row_direction) && ([:up, :left].include? col_direction) %>
      row_index = Math.max(...row_arr)
      col_index = Math.min(...col_arr)

    // Quadrant IV (South East)
    <% else %>
      row_index = Math.max(...row_arr)
      col_index = Math.max(...col_arr)

    <% end %>

    if (risk_type == "Baseline") {
      set_baseline_risk(row_index, col_index)
    } else { // "Mitigate"
      set_mitigate_risk(row_index, col_index)
    }
  }


  function set_baseline_risk(row_index, column_index) {
    $('.risk_td_<%=@owner.class.name%>_<%=@owner.id%>').each(function(){
      if($(this).data("row") == row_index && $(this).data("column") == column_index){
        $(this).find('.content').addClass('circle initial-circle')

        <% if risk_type == 'Baseline' %>
          update_hidden_fields(row_index, column_index)
        <% end %>

        handle_overlap($(this).find('.content'))
      }
    })
  }


  function set_mitigate_risk(row_index, column_index) {
    $('.risk_td_<%=@owner.class.name%>_<%=@owner.id%>').each(function(){
      if($(this).data("row") == row_index && $(this).data("column") == column_index){
        $(this).find('.content').addClass('circle mitigated-circle')

        <% if risk_type == 'Mitigate' %>
          update_hidden_fields(row_index, column_index)
        <% end %>

        handle_overlap($(this).find('.content'))
      }
    })
  }

  function update_hidden_fields(row_index, column_index) {
    <%risk_table = CONFIG::MATRIX_INFO[:risk_table]%>
    risk_table_colors = <%=(risk_table[:rows] || risk_table[:rows_color]).to_json.html_safe%>
    risk_definitions = <%=CONFIG::MATRIX_INFO[:risk_table_dict].to_json.html_safe%>

    risk_color = risk_table_colors[row_index][column_index]
    risk_factor = risk_definitions[risk_color]

    probability = <%=is_row_probability?%> ? row_index    : column_index
    severity    = <%=is_row_probability?%> ? column_index : row_index

    console.log(severity)
    console.log(probability)
    console.log(risk_factor)

    $('#sev').val(severity)
    $('#like').val(probability)
    $('#risk_fact').val(risk_factor)
  }


  function clear_baseline_risk() {
    $('.risk_td_<%=@owner.class.name%>_<%=@owner.id%>').each(function(){
      $(this).find('.content').removeClass('initial-circle')
    })
  }


  function clear_mitigate_risk() {
    $('.risk_td_<%=@owner.class.name%>_<%=@owner.id%>').each(function(){
      $(this).find('.content').removeClass('mitigated-circle')
    })
  }


  function clear_severity(status) {
    $('.severity_td_<%=@owner.class.name%>_<%=@owner.id%>').each(function(){
      $(this).data(status, "")
      $(this).css('background', 'none')
    })
  }


  function clear_probability(status) {
    $('.probability_td_<%=@owner.class.name%>_<%=@owner.id%>').each(function(){
      $(this).data(status, "")
      $(this).css('background', 'none')
    })
  }


  function handle_overlap(cell) {
    <% if risk_type.nil? %>
      if ($(cell).hasClass('mitigated-circle') && $(cell).hasClass('initial-circle'))
        $(cell.addClass('overlap-circle'))
    <% end %>
  }

</script>
