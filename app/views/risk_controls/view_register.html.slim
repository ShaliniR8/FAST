= stylesheet_link_tag "/plugins/tables/datatables-1.10.16/datatables.min.css"
= javascript_include_tag "/plugins/tables/datatables-1.10.16/datatables.min.js"
= javascript_include_tag "//cdn.datatables.net/plug-ins/1.10.16/sorting/natural.js"
= javascript_include_tag "/javascripts/utility/format-builder.js"


.item.active.mt50 sytle="height:auto"
  .grid.per90.center-block
    = render 'shared/alerts'
    = render 'access_controls/new_modal'

    .panel.panel-primary
      .panel-body
        h4 class="pull-right mr10" style="font-weight:bold;color:#0bacd3" = @title
        / = link_to "Advanced Search", '#',
        /   class: "btn btn-default pull-right mr10 ml10", id: "adv",
        /   "data-toggle" => "modal",
        /   "data-target" => ".bs-example-modal-lg"

        .tab-content.mt20
          .tab-pane.fade.in.active id='table'
            = render 'shared/loaders', loader_text: 'Loading'
            .risks-table
              table id='risks_table' class='table table-hover table-striped table-bordered index_table'
                thead
                  tr
                    - @header_labels.each do |column_title|
                      th = column_title
                tfoot
                  tr
                    - @header_labels.each do |column_title|
                      th = column_title
                tbody
                  - @risks.each do |risk|
                    tr.pointer id=risk[:id]
                      - @headers.each do |head|
                        - hazard = risk.hazard
                        - if head.start_with?('owner')
                          - if head == 'owner_title'
                            - if !hazard.occurrences.present?
                              td
                                | #{hazard[:title]}
                            - else
                              td
                                / | #{hazard.occurrences.last.value}
                                | #{hazard.occurrences.map(&:value).join(",")}
                          - elsif head == 'owner_initial_risk'
                            - if hazard.risk_factor.present?
                              - if hazard.risk_factor.downcase.include?("yellow") || hazard.risk_factor.downcase.include?("moderate")
                                td style="background-color:yellow;"
                                  | #{hazard[:risk_factor]}
                              - elsif hazard.risk_factor.downcase.include?("green") || hazard.risk_factor.downcase.include?("low")
                                td style="background-color:limegreen;"
                                  | #{hazard[:risk_factor]}
                              - elsif hazard.risk_factor.downcase.include?("red") || hazard.risk_factor.downcase.include?("high")
                                td style="background-color:red;"
                                  | #{hazard[:risk_factor]}
                              - else
                                td
                                  | #{hazard[:risk_factor]}
                            - else
                              td
                                | #{hazard[:risk_factor]}
                          - elsif head == 'owner_residual_risk'
                            - if hazard.risk_factor_after.present?
                              - if hazard.risk_factor_after.downcase.include?("yellow") || hazard.risk_factor_after.downcase.include?("moderate")
                                td style="background-color:yellow;"
                                  | #{hazard[:risk_factor_after]}
                              - elsif hazard.risk_factor_after.downcase.include?("green") || hazard.risk_factor_after.downcase.include?("low")
                                td style="background-color:limegreen;"
                                  | #{hazard[:risk_factor_after]}
                              - elsif hazard.risk_factor_after.downcase.include?("red") || hazard.risk_factor_after.downcase.include?("high")
                                td style="background-color:red;"
                                  | #{hazard[:risk_factor_after]}
                              - else
                                td
                                  | #{hazard[:risk_factor_after]}
                            - else
                              td
                                | #{hazard[:risk_factor_after]}
                        - else
                          td
                            | #{risk.send(head)}



css:
  .nav-pills {
    border-bottom: 1px solid #0bacd3;
  }
  .nav-pills > li > a {
    background-color: white;
  }
  .pointer{
    cursor:pointer;
  }

  th, td { font-size: 13px; }
  td > a { font-size: 13px !important; }


javascript:

  function classifyString(str) {
    return str.replace('-', ' ').replace(/\b\w/g, l => l.toUpperCase())
  }

  function kebabCaseString(str) {
    return str.replace(/([a-z])([A-Z])/g, '$1-$2')    // get all lowercase letters that are near to uppercase ones
              .replace(/[\s_]+/g, '-')                // replace all spaces and low dash
              .toLowerCase()                          // convert to lower case
  }

  function updateSearchTerms(searchTerms) {
    for (column in searchTerms) {
      $(`tfoot tr th:nth-child(${parseInt(column)+1}) input`).val(searchTerms[column])
    }
  }

  function addIndividualColumnSearchField() {
    $('#risks_table tfoot th').each(function(index) {

      isDateField = "#{@date_type_column_indices}".includes(index)
      if (isDateField) {
        $(this).html('<input type="date" class="form-control" />');
      } else {
        $(this).html('<input type="text" class="form-control" />');
      }
    });
  }


  function alignExportBtns() {
    $('.dt-buttons.btn-group').addClass("pull-right mb15");
  }

  function columnSearch() {
    $('#risks_table').dataTable().api().columns().every(function() {
      var column = this;

      $('input', this.footer()).on('keyup change', function(e) {
        // keyCode 13 is 'Enter'
        if(e.keyCode == 13 && column.search() !== this.value){
          search_term = this.value

          // reset the filters
          // $('#records_table').dataTable().api().columns().search('')

          column.search(search_term).draw();
        }
      });
    });
  }

  function addRecordIdToRow() {
    $("tbody tr").each(function () {
      recordId = $(this).find(">:first-child").text();
      $(this).attr("record-id",recordId);
    })
  }

  function drawTableCallBack() {
    addIndividualColumnSearchField();
    alignExportBtns();
    $('#loader1').hide();
    columnSearch();
  }

  $(function() {

    let risks_table = $('#risks_table').DataTable({
        "iDisplayLength": 10,
        "drawCallback": drawTableCallBack,
    });

    $("#risks_table tbody tr").on('click', function() {
          let row_id = $(this).attr('id');
          console.log("Redirect to show page for ID: " + row_id);
          window.open("/risk_controls/"+row_id,"_self");
    });

    let adv_path = "#{@adv_path}"
    console.log(adv_path);

    $('#adv').on('click',function(){
      $.get(adv_path, function(data){
        $(".modal-content").html(data);
        $(window).resize();
      });
    });

  });
