ruby:
  deid = defined?(deid) ? deid : false

- @template_hash.each do |category, fields|
  - @cat = category
  - if @cat.print || !deid
    - if @cat.id == 338
      - if @cat.not_empty_for(@record)
        = render 'records/show_observation_phases_category', deid: deid


    - else
      - if @cat.not_empty_for(@record)
        = render 'records/category', deid: deid, from_record_show: true, record_edit_access: record_edit_access

css:
  .row.is-flex {
    display: flex;
    flex-wrap: wrap;
  }

  .row.is-flex > [class*='col-'] {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }

  .row.is-flex > .nested_field_row {
    flex-direction: row;
    justify-content: flex-start;
  }

  .graybox {
    padding: 15px 0;
    background-color: rgb(211,211,211, 0.15);
    border-radius: 5px;
  }

  .row.is-flex > .nested_field_row > .nested_field > .form-group {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }
  .tc {
    cursor: pointer;
  }
  .checkbox,
  .radio{
    cursor: pointer;
    margin-top: 2px;
    margin-bottom: 2px;
  }
  .checkbox:hover {
    font-weight:bold;
  }
  .radio:hover {
    font-weight:bold;
  }


javascript:
  $(function() {

    var loader_partial = "#{escape_javascript(render partial: 'shared/loader')}";

    $(document).on('click', '.edit-category-btn', function(e) {
      console.log('edit-category-btn clicked');
      e.preventDefault();
      var content_area = $(this).closest('.panel-body');
      $.ajax({
        url: $(this).data('path'),
        type: 'GET',
        beforeSend: function() {
          $(content_area).html(loader_partial);
          $(content_area).find('.loader').show();
        },
        success: function(data) {
          $(content_area).find('.loader').remove();
          $(content_area).html(data);
        },
        error: function(error) {
          console.log('error: ' + error);
        }
      });
    });


    $(document).on('click', '.save-field-btn', function(e) {
      console.log('save-field-btn clicked');
      e.preventDefault();
      var content_area = $(this).closest('.panel-body');
      $.ajax({
        url: $(this).data('path'),
        type: 'PUT',
        data: $(this).closest('.edit_record').serialize(),
        beforeSend: function() {
          $(content_area).html(loader_partial);
          $(content_area).find('.loader').show();
        },
        success: function(data) {
          $(content_area).find('.loader').remove();
          $(content_area).html(data);
        },
        error: function(error) {
          console.log('error: ' + error);
        }
      });
    });


  });


  function update_timezones(){
     $('.toplevel_timezone').on('change',function(){
      var timezone = $('.toplevel_timezone').val();
      $(".timezone_field").val(timezone);
    });
  }



