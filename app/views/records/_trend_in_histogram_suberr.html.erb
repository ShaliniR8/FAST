<div class="col-xs-12 col-sm-6">
	<div class="panel panel-default">
		<div class="panel-heading">
			<div class="panel-title">
				<b>Sub Errors</b>
			</div>
		</div>
		<div class="panel-body">
			<div class="row">
				<ul class="nav nav-tabs">
					<li class="active"><a data-toggle="tab" href="#suberr_chart" onclick="drawSubErrPieChart();">Pie Chart</a></li>
					<li><a data-toggle="tab" href="#suberr_chart" onclick="drawSubErrBarChart();">Bar Chart</a></li>
					<li><a data-toggle="tab" href="#suberr_grid">Grid</a></li>
				</ul>
				<div class="tab-content">
					<div id="suberr_chart" class="tab-pane fade in active">
						<div id="suberr_chart_div" style="width: '100%'"></div>
						<div class="mr10" id="suberr_chart_download" align="right"></div> 
					</div>
					<div id="suberr_grid" class="tab-pane fade">
						<%=render "trend_stats_grid", :records => @suberrs, :section_name => "suberr"%>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>


<script>

	google.charts.load("current", {packages:["corechart"]});
	google.charts.setOnLoadCallback(drawSubErrBarChart);
	google.charts.setOnLoadCallback(drawSubErrPieChart);

	function drawSubErrBarChart(){
		$("suberr_chart_div").html("");
		var colorArray = colorInterpolation(<%=@suberrs.length%>);
		var data = new google.visualization.DataTable();
		data.addColumn(					"string", 			"Sub Errors");
		data.addColumn(					"number", 			"Count");
		data.addColumn({type: 	"string", role: 'tooltip'});
		data.addColumn({type: 	"string", role: 'annotationText'});
		data.addColumn({type: 	"string", role: 'style'});

		
		data.addRows([
			<%@suberrs.each_with_index do |(k, v), index|%>
				<%="['#{index+1}', #{v}, '#{k}', '#{k}',"%> colorArray[<%=index%>]],
			<%end%>
		]);
		var view = new google.visualization.DataView(data);
		view.setColumns([0, 1,
			{	calc: "stringify",
				sourceColumn: 1,
				type: "string",
				role: "annotation"
			}, 2, 3, 4]);
		var options = {
			titleTextStyle: {color: "black", fontSize: 18, bold: true},
			height: 400,
			title: "Sub Errors Distribution",
			legend: {position: 'none'},
			bar: {groupWidth: "90%"},
		};
		var barChart = new google.visualization.ColumnChart(document.getElementById('suberr_chart_div'));
		//google.visualization.events.addListener(barChart, 'onmouseover', suberrCursorOver);
		//google.visualization.events.addListener(barChart, 'onmouseout', suberrCursorOut);
		// google.visualization.events.addListener(barChart, 'select', function() {
		// 	var selection = barChart.getSelection();
		// 	for (var i = 0; i < selection.length; i++){
		// 		var item = selection[i];
		// 		var field_id = data.getValue(item.row, 3);
		// 		$.get("<%=update_listing_table_records_path%>?start_date=<%=params[:start_date]%>&end_date=<%=params[:end_date]%>&field_id=" + field_id, function(data){
		// 			$("#record_listing").html(data);
		// 		});
		// 	}
		// });
		google.visualization.events.addListener(barChart, 'ready', function () {
			document.getElementById('suberr_chart_download').innerHTML = '<a href="' + barChart.getImageURI() + '"download><u>Download Chart</u></a>';
		});
		barChart.draw(view, options);
	}

	function drawSubErrPieChart(){
		$("suberr_chart_div").html("");
		var colorArray = colorInterpolation(<%=@suberrs.length%>);
		var data = new google.visualization.DataTable();
		data.addColumn(					"string", 			"Root Cause");
		data.addColumn(					"number", 			"Count");
		data.addColumn({type: 	"string", role: 'tooltip'});
		data.addColumn({type: 	"string", role: 'annotationText'});
		data.addColumn({type: 	"string", role: 'style'});

		
		data.addRows([
			<%@suberrs.each_with_index do |(k, v), index|%>
				<%="['#{k}', #{v}, '#{k}', '#{k}',"%> colorArray[<%=index%>]],
			<%end%>
		]);
		var view = new google.visualization.DataView(data);
		view.setColumns([0, 1,
			{	calc: "stringify",
				sourceColumn: 1,
				type: "string",
				role: "annotation"
			}, 2, 3, 4]);
		var options = {
			height: 400,
			title: "Sub Errors Distribution",
			titleTextStyle: {color: "black", fontSize: 18, bold: true},
			legend: {position: 'labeled'},
			bar: {groupWidth: "90%"},
			colors: colorArray,
			pieSliceTextStyle: { color: 'black'},
			pieSliceText: 'annotationText',
			chartArea: {  height: "40%", width: "95%" },
			tooltip: {textStyle: {color: 'black'}, showColorCode: true},
		};
		var pieChart = new google.visualization.PieChart(document.getElementById('suberr_chart_div'));
		// google.visualization.events.addListener(pieChart, 'onmouseover', suberrCursorOver);
		// google.visualization.events.addListener(pieChart, 'onmouseout', suberrCursorOut);
		// google.visualization.events.addListener(pieChart, 'select', function() {
		// 	var selection = pieChart.getSelection();
		// 	for (var i = 0; i < selection.length; i++){
		// 		var item = selection[i];
		// 		var field_id = data.getValue(item.row, 3);
		// 		$.get("<%=update_listing_table_records_path%>?start_date=<%=params[:start_date]%>&end_date=<%=params[:end_date]%>&field_id=" + field_id, function(data){
		// 			$("#record_listing").html(data);
		// 		});
		// 	}
		// });
		google.visualization.events.addListener(pieChart, 'ready', function () {
			document.getElementById('suberr_chart_download').innerHTML = '<a href="' + pieChart.getImageURI() + '"download><u>Download Chart</u></a>';
		});
		pieChart.draw(view, options);
	}

	function suberrCursorOver() {
		$('#suberr_chart_div').css('cursor','pointer')
	}  
	function suberrCursorOut() {
		$('#suberr_chart_div').css('cursor','default')
	} 

	$(window).bind('resizeEnd', function(){
		drawSubErrBarChart();
		drawSubErrPieChart();
	});

</script>
